#                                                                    -*-perl-*-

$description = "This script tests to make sure that Make looks for
default makefiles in the correct order (GNUmakefile,makefile,Makefile)";

# Create a makefile called "GNUmakefile"
$makefile = "GNUmakefile";

$xml_init_cmd = qq!open(MAKEFILE,"> $makefile");
print MAKEFILE "FIRST: ; \\\@echo It chose GNUmakefile\n";
close(MAKEFILE);

# Create another makefile called "makefile"
open(MAKEFILE,"> makefile");
print MAKEFILE "SECOND: ; \\\@echo It chose makefile\n";
close(MAKEFILE);
!;

# DOS/WIN32/MacOSX platforms are case-insensitive / case-preserving, so
# Makefile is the same file as makefile.  Just test what we can here.

my $case_sensitive = 0;
if (! -f 'Makefile') {
    # Create another makefile called "Makefile"
    $case_sensitive = 1;
    open(MAKEFILE,"> Makefile");
    print MAKEFILE "THIRD: ; \@echo It chose Makefile\n";
    close(MAKEFILE);
}

$DB::single = 1;
$answer = "It chose GNUmakefile\n";
run_make_with_options("","",&get_logfile);
compare_output($answer,&get_logfile(1));
$xml_init_cmd = qq!unlink("$makefile");!;

$answer = "It chose makefile\n";
run_make_with_options("","",&get_logfile);
compare_output($answer,&get_logfile(1));
$xml_init_cmd = q!unlink("makefile");!;

if ($case_sensitive) {
  $answer = "It chose Makefile\n";
    run_make_with_options("","",&get_logfile);
    compare_output($answer,&get_logfile(1));
    unlink("Makefile");
}

unlink("$makefile", "makefile", "Makefile");
1;
